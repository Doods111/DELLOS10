{% set my_vrf_names = ["DEV","NET","APP","DB","WEB"] %}

{% set nb_vni = ((inventory_hostname.strip("leaf")| int )*nb)%}
{% set start_vni = nb_vni - (nb -1) %}
{% set nb_vni = nb_vni + 1 %}


hostname: {{inventory_hostname}}
build_dir: ../temp/dellos10


dellos_system: 
    hostname: {{inventory_hostname}}
 

dellos_interface:
{% for i in range(nb_spine) %}
   ethernet 1/1/{{i+1}}:
      desc: "Connected to spine{{i+1}}"
      switchport: False
      admin: up
      ip_and_mask: 172.16.0.{{ ((nb_leaf * nb_spine)*i)+(((inventory_hostname.strip("leaf")| int )-1)*nb_spine)+1 }}/31
{% endfor %}
   loopback 0:
      ip_and_mask: 10.0.0.{{ nb_spine+(inventory_hostname.strip("leaf")| int ) }}/32
{% for my_vni in range(start_vni,nb_vni) %} 
   virtual-network 1{{my_vni}}00:
      vrf: {{my_vrf_names[0]}}
      desc: "virtual-network interface"
      ip_and_mask: "10.{{my_vni}}0.10.{{inventory_hostname.strip("leaf")}}/24"
#      virtual_gateway_ip: "10.{{my_vni}}0.10.{{inventory_hostname.strip("leaf")}}"
      admin: up
{% endfor %}



dellos_bgp:
##    state: absent
    asn: 1{{ (inventory_hostname.strip("leaf")| int ) }}
    router_id: 10.0.0.{{ nb_spine+(inventory_hostname.strip("leaf")| int ) }}
    neighbor:
{% for i in range(nb_spine) %} 
      - ip: 172.16.0.{{ ((nb_leaf * nb_spine)*i)+(((inventory_hostname.strip("leaf")| int )-1)*nb_spine) }}
        type: ipv4
        remote_asn: 10
        timer: 3 9
        adv_interval: 40
        fall_over: present
        default_originate: False
        sender_loop_detect: false
        admin: up
        state: present
#============================================================
      - ip: 10.0.0.{{i+1}}
        type: ipv4
        remote_asn: 10
        timer: 3 9
        adv_interval: 40
        fall_over: present
        default_originate: False
        sender_loop_detect: false
        src_loopback: 0
        src_loopback_state: present
        send_community:
           - type: extended
           - state: present
        address_family: 
           - type: ipv4
             activate: false
           - type: l2vpn
             activate: true
        admin: up
        state: present
{% endfor %}     
    redistribute:
      - route_type: connected
        address_type: ipv4
        state: present

dellos_vlan:
{% for my_vni in range(start_vni,nb_vni) %}    
    vlan 1{{my_vni}}00:
      description: "VNI1{{my_vni}}00"
      untagged_members:
        - port: ethernet 1/1/{{(nb_spine+1+my_vni)-start_vni}}
          state: present
      state: present
{% endfor %}     
  
dellos_vxlan:
    anycast_gateway_mac: "00:22:33:44:55:{{ inventory_hostname.strip("leaf")}}{{ inventory_hostname.strip("leaf")}}"
    loopback:
      loopback_id: 10
      description: "HARDWARE_VXLAN"
      ip_address: "10.10.0.{{ nb_spine+(inventory_hostname.strip("leaf")| int ) }}/32"
      state: "present"
    nve:
      source_interface: 0
      state: "present"
    rmac: 00:11:11:11:11:11
    evpn:
      autoevi: False
      evi:
{% for my_vni in range(start_vni,nb_vni) %}    
        - id: 1{{my_vni}}00
          rd: 10.0.0.{{ nb_spine+(inventory_hostname.strip("leaf")| int ) }}:1{{my_vni}}00
          vni:
            id: 1{{my_vni}}00
            state: "present"
          route_target:
            - type: "manual"
              asn_value: "1{{my_vni}}00:1{{my_vni}}00"
              route_target_type: "both"
              state: "present"
          state: "present"
{% endfor %}     
          

      vrf:
{% for v in my_vrf_names %}
        - name: {{v}}
          state: "present"      
          vni: 1{{my_vrf_names.index(v)}}000
          adv_ipv4:
           - type: "connected"
             state: "present"
           - type: "bgp"
             state: "present"
          route_target:
           - type: "manual"
             asn_value: "65530:1{{my_vrf_names.index(v)}}"
             route_target_type: "both"
             state: "present"
{% endfor %}     

    dis_rt_asn: "true"

    virtual_network:
      virtual_net:
{% for my_vni in range(start_vni,nb_vni) %}    
        - id: 1{{my_vni}}00
          vxlan_vni:
           id: 1{{my_vni}}00
          state: "present" 
{% endfor %} 
    vlan_association:
{% for my_vni in range(start_vni,nb_vni) %}    
      - vlan_id: 1{{my_vni}}00
        virtual_net: 1{{my_vni}}00
{% endfor %} 

dellos_vrf:
    vrfdetails:
{% for v in my_vrf_names %}    
      - vrf_name: {{v}} 
        state: "present"
{% endfor %}           
        
        
